// app/page.tsx
'use client';

import Head from 'next/head';
import { Navbar, Nav, Button, Container, Row, Col, Form, InputGroup, Card } from 'react-bootstrap';
import { useState, useEffect } from 'react';
import { supabase } from '../utils/supabaseClient';

// Define interfaces for component props to ensure type safety in TypeScript
interface Course {
  id: string; // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå id ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö key
  university_name: string;
  course_code: string;
  course_name: string;
  faculty: string;
  credits: number;
  // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å reviews
  instructor: string; // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô courses, ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  rating: number; // ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏à‡∏≤‡∏Å reviews
  reviews: number; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
  students: number; // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏°‡∏µ
  preview: string; // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏°‡∏µ
}

interface TrendingCourse {
  id: string;
  title: string;
  rating: number;
  reviews: number;
}

export default function Home() {
  const [courses, setCourses] = useState<Course[]>([]);
  const [trendingCourses, setTrendingCourses] = useState<TrendingCourse[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    async function fetchCourses() {
      setLoading(true);
      setError(null);
      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• courses ‡πÅ‡∏•‡∏∞ JOIN ‡∏Å‡∏±‡∏ö reviews ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á rating_overall
      // 'reviews(rating_overall)' ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏Å‡πá‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ Foreign Key 'course_id' ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á reviews
      const { data, error } = await supabase
        .from('courses')
        .select('*, reviews(rating_overall)'); // ‡∏î‡∏∂‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏à‡∏≤‡∏Å courses ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á rating_overall ‡∏à‡∏≤‡∏Å reviews ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ô

      if (error) {
        console.error('Error fetching courses:', error);
        setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ: ' + error.message);
      } else {
        const fetchedCourses: Course[] = data.map((item: any) => {
          // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
          const reviewsCount = item.reviews ? item.reviews.length : 0;
          let averageRating = 0;
          if (reviewsCount > 0) {
            const totalRating = item.reviews.reduce((sum: number, review: any) => sum + (review.rating_overall || 0), 0);
            averageRating = totalRating / reviewsCount;
          }

          return {
            id: item.id || item.course_code,
            university_name: item.university_name || '',
            course_code: item.course_code || '',
            course_name: item.course_name || '',
            faculty: item.faculty || '',
            credits: item.credits || 0,
            instructor: item.instructor || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏', // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå instructor ‡πÉ‡∏ô courses ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
            rating: parseFloat(averageRating.toFixed(1)), // ‡∏õ‡∏±‡∏î‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° 1 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
            reviews: reviewsCount,
            students: item.students || 0, // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå students ‡πÉ‡∏ô courses ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
            preview: item.preview || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏¢‡πà‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡∏ä‡∏≤‡∏ô‡∏µ‡πâ', // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå preview ‡πÉ‡∏ô courses ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
          };
        });
        setCourses(fetchedCourses);
      }
      setLoading(false);
    }

    async function fetchTrendingCourses() {
      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á courses ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á reviews ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô/‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
      const { data, error } = await supabase
        .from('courses')
        .select('id, course_name, reviews(rating_overall)'); // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

      if (error) {
        console.error('Error fetching trending courses:', error);
      } else {
        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡∏ä‡∏≤‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°
        const fetchedTrendingCourses: TrendingCourse[] = data.map((item: any) => {
          const reviewsCount = item.reviews ? item.reviews.length : 0;
          let averageRating = 0;
          if (reviewsCount > 0) {
            const totalRating = item.reviews.reduce((sum: number, review: any) => sum + (review.rating_overall || 0), 0);
            averageRating = totalRating / reviewsCount;
          }

          return {
            id: item.id || item.course_name,
            title: item.course_name || '',
            rating: parseFloat(averageRating.toFixed(1)),
            reviews: reviewsCount,
          };
        }).sort((a, b) => b.reviews - a.reviews) // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
          .slice(0, 5); // ‡∏à‡∏≥‡∏Å‡∏±‡∏î 5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£

        setTrendingCourses(fetchedTrendingCourses);
      }
    }

    fetchCourses();
    fetchTrendingCourses();
  }, []);

  // CourseCard Component: Displays individual course information
  const CourseCard = ({ course_code, course_name, instructor, rating, reviews, students, credits, preview, university_name, faculty }: Course) => (
    <Card className="course-card h-100">
      <Card.Body>
        <div className="d-flex justify-content-between align-items-start mb-3">
          <span className="course-code">{course_code}</span>
          <div className="rating d-flex align-items-center">
            <span className="stars">{'‚òÖ'.repeat(Math.floor(rating))}</span>
            <span className="ms-1">{rating}</span>
          </div>
        </div>
        <Card.Title className="course-title">{course_name}</Card.Title>
        <Card.Subtitle className="mb-2 text-muted course-instructor">{instructor}</Card.Subtitle>
        <div className="d-flex justify-content-between mb-3 font-size-small course-stats">
          <span className="stat-item">üìö {reviews} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</span>
          <span className="stat-item">üë• {students} ‡∏Ñ‡∏ô</span>
          <span className="stat-item">‚è±Ô∏è {credits} ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï</span>
        </div>
        <Card.Text className="course-preview">{preview}</Card.Text>
        <div className="d-flex justify-content-between font-size-small text-muted mt-2">
            <span>{university_name}</span>
            <span>{faculty}</span>
        </div>
      </Card.Body>
    </Card>
  );

  // TrendingCourseItem Component: Displays popular courses in the sidebar
  const TrendingCourseItem = ({ title, rating, reviews }: TrendingCourse) => (
    <li>
      <div className="trending-title">{title}</div>
      <div className="trending-stats">‚òÖ{rating} ‚Ä¢ {reviews} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</div>
    </li>
  );

  return (
    <div>
      <Head>
        <title>Learn Radar - ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤</title>
        <meta name="description" content="‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header>
        <Navbar expand="lg" className="container">
          <Navbar.Brand href="#" className="logo">Learn Radar</Navbar.Brand>
          <Navbar.Toggle aria-controls="basic-navbar-nav" />
          <Navbar.Collapse id="basic-navbar-nav">
            <Nav className="ms-auto nav-links">
              <Nav.Link href="#home">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</Nav.Link>
              <Nav.Link href="#courses">‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ß‡∏¥‡∏ä‡∏≤</Nav.Link>
              <Nav.Link href="#instructors">‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</Nav.Link>
              <Nav.Link href="#universities">‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢</Nav.Link>
              <Nav.Link href="#about">‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤</Nav.Link>
            </Nav>
            <div className="auth-buttons ms-auto">
              <Button variant="outline-primary" className="btn-secondary me-2">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</Button>
              <Button variant="primary" className="btn-primary">‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</Button>
            </div>
          </Navbar.Collapse>
        </Navbar>
      </header>

      <main className="container">
        <section className="hero">
          <div className="hero-content">
            <h1>‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏£‡∏¥‡∏á</h1>
            <p>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏à‡∏≤‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤</p>
            <Button variant="primary" className="btn-primary">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤</Button>
          </div>
        </section>

        <section className="search-section" id="search">
          <InputGroup className="mb-3 search-container">
            <Form.Control
              type="text"
              className="search-input"
              placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤..."
            />
            <Button variant="primary" className="btn-primary">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</Button>
          </InputGroup>
          <div className="d-flex flex-wrap gap-3 search-filters">
            <Form.Select className="filter-select">
              <option>‡∏ó‡∏∏‡∏Å‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢</option>
              <option>‡∏à‡∏∏‡∏¨‡∏≤‡∏•‡∏á‡∏Å‡∏£‡∏ì‡πå‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢</option>
              <option>‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏ò‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</option>
              <option>‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏°‡∏´‡∏¥‡∏î‡∏•</option>
            </Form.Select>
            <Form.Select className="filter-select">
              <option>‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ì‡∏∞</option>
              <option>‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</option>
              <option>‡πÅ‡∏û‡∏ó‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</option>
              <option>‡∏Ñ‡∏£‡∏∏‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</option>
            </Form.Select>
            <Form.Select className="filter-select">
              <option>‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°</option>
              <option>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</option>
              <option>‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</option>
              <option>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏¢‡∏°</option>
            </Form.Select>
          </div>
        </section>

        <div className="main-content">
          <section className="courses-section">
            <Row className="g-4">
              {loading && <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô...</p>}
              {error && <p style={{ color: 'red' }}>{error}</p>}
              {!loading && !error && courses.length === 0 && <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</p>}
              {courses.map((course) => (
                <Col xs={12} md={6} lg={4} key={course.id}>
                  <CourseCard {...course} />
                </Col>
              ))}
            </Row>
          </section>

          <aside className="sidebar">
            <h3>üî• ‡∏ß‡∏¥‡∏ä‡∏≤‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°</h3>
            <ul className="trending-courses">
              {trendingCourses.length === 0 && <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ß‡∏¥‡∏ä‡∏≤‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°</p>}
              {trendingCourses.map((course) => (
                <TrendingCourseItem key={course.id} {...course} />
              ))}
            </ul>

            <div className="quick-actions mt-4">
              <h3>üöÄ ‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏•‡∏¢!</h3>
              <Button variant="primary" className="action-btn mb-2">‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</Button>
              <Button variant="primary" className="action-btn mb-2">‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</Button>
              <Button variant="primary" className="action-btn">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à</Button>
            </div>
          </aside>
        </div>
      </main>

      <footer className="footer">
        <Container>
          <p>&copy; 2025 Learn Radar. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤</p>
        </Container>
      </footer>

      <div className="floating-add-btn" title="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÉ‡∏´‡∏°‡πà">
        ‚úèÔ∏è
      </div>
    </div>
  );
}